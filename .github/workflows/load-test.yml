name: Teste de Carga
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      target_env:
        description: "Ambiente alvo"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

env:
  API_BASE_PATH: "/api/v1"
  API_URL_STAGING: "https://staging.marketoflow.com"
  API_URL_PRODUCTION: "https://api.marketoflow.com"

jobs:
  performance-test:
    name: Teste de Carga - ${{ inputs.target_env || 'staging' }}
    runs-on: ubuntu-latest
    container:
      image: grafana/k6
      options: --user root

    steps:
      - name: Baixar cÃ³digo
        uses: actions/checkout@v4

      - name: Configurar ambiente
        run: |
          mkdir -p /tmp/results
          chmod 777 /tmp/results
          
          if [ "${{ inputs.target_env }}" = "production" ]; then
            echo "API_URL=$API_URL_PRODUCTION$API_BASE_PATH" >> $GITHUB_ENV
          else
            echo "API_URL=$API_URL_STAGING$API_BASE_PATH" >> $GITHUB_ENV
          fi

          # Configura o K6_CLOUD_TOKEN apenas se existir
          if [ -n "${{ secrets.K6_CLOUD_TOKEN }}" ]; then
            echo "K6_CLOUD_TOKEN=${{ secrets.K6_CLOUD_TOKEN }}" >> $GITHUB_ENV
            echo "K6_CLOUD_ENABLED=true" >> $GITHUB_ENV
          else
            echo "K6_CLOUD_ENABLED=false" >> $GITHUB_ENV
          fi

      - name: Executar teste
        run: |
          CLOUD_FLAG=""
          if [ "$K6_CLOUD_ENABLED" = "true" ]; then
            CLOUD_FLAG="--out cloud"
          fi

          k6 run tests/performance/loadTest.js \
            --env API_URL="$API_URL" \
            --env API_TOKEN="${{ secrets.API_TOKEN }}" \
            --vus ${{ inputs.target_env == 'production' && '200' || '100' }} \
            --duration ${{ inputs.target_env == 'production' && '10m' || '5m' }} \
            $CLOUD_FLAG \
            --out json=/tmp/results/test_results.json \
            --summary-export=/tmp/results/summary.json

      - name: Enviar resultados
        uses: actions/upload-artifact@v4
        with:
          name: resultados-${{ inputs.target_env || 'staging' }}
          path: /tmp/results/*